'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4223
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsroder"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsroder
    Inherits Global.System.Data.DataSet
    
    Private tablerptsession As rptsessionDataTable
    
    Private tablerptheader As rptheaderDataTable
    
    Private tablesale_wt As sale_wtDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("rptsession")) Is Nothing) Then
                MyBase.Tables.Add(New rptsessionDataTable(ds.Tables("rptsession")))
            End If
            If (Not (ds.Tables("rptheader")) Is Nothing) Then
                MyBase.Tables.Add(New rptheaderDataTable(ds.Tables("rptheader")))
            End If
            If (Not (ds.Tables("sale_wt")) Is Nothing) Then
                MyBase.Tables.Add(New sale_wtDataTable(ds.Tables("sale_wt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property rptsession() As rptsessionDataTable
        Get
            Return Me.tablerptsession
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property rptheader() As rptheaderDataTable
        Get
            Return Me.tablerptheader
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property sale_wt() As sale_wtDataTable
        Get
            Return Me.tablesale_wt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsroder = CType(MyBase.Clone,dsroder)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("rptsession")) Is Nothing) Then
                MyBase.Tables.Add(New rptsessionDataTable(ds.Tables("rptsession")))
            End If
            If (Not (ds.Tables("rptheader")) Is Nothing) Then
                MyBase.Tables.Add(New rptheaderDataTable(ds.Tables("rptheader")))
            End If
            If (Not (ds.Tables("sale_wt")) Is Nothing) Then
                MyBase.Tables.Add(New sale_wtDataTable(ds.Tables("sale_wt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablerptsession = CType(MyBase.Tables("rptsession"),rptsessionDataTable)
        If (initTable = true) Then
            If (Not (Me.tablerptsession) Is Nothing) Then
                Me.tablerptsession.InitVars
            End If
        End If
        Me.tablerptheader = CType(MyBase.Tables("rptheader"),rptheaderDataTable)
        If (initTable = true) Then
            If (Not (Me.tablerptheader) Is Nothing) Then
                Me.tablerptheader.InitVars
            End If
        End If
        Me.tablesale_wt = CType(MyBase.Tables("sale_wt"),sale_wtDataTable)
        If (initTable = true) Then
            If (Not (Me.tablesale_wt) Is Nothing) Then
                Me.tablesale_wt.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsroder"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsroder.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablerptsession = New rptsessionDataTable
        MyBase.Tables.Add(Me.tablerptsession)
        Me.tablerptheader = New rptheaderDataTable
        MyBase.Tables.Add(Me.tablerptheader)
        Me.tablesale_wt = New sale_wtDataTable
        MyBase.Tables.Add(Me.tablesale_wt)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializerptsession() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializerptheader() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializesale_wt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsroder = New dsroder
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub rptsessionRowChangeEventHandler(ByVal sender As Object, ByVal e As rptsessionRowChangeEvent)
    
    Public Delegate Sub rptheaderRowChangeEventHandler(ByVal sender As Object, ByVal e As rptheaderRowChangeEvent)
    
    Public Delegate Sub sale_wtRowChangeEventHandler(ByVal sender As Object, ByVal e As sale_wtRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class rptsessionDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnkey As Global.System.Data.DataColumn
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnslno As Global.System.Data.DataColumn
        
        Private columnmetal As Global.System.Data.DataColumn
        
        Private columnitem As Global.System.Data.DataColumn
        
        Private columnbeedname As Global.System.Data.DataColumn
        
        Private columngross As Global.System.Data.DataColumn
        
        Private columnbeeds As Global.System.Data.DataColumn
        
        Private columnmc As Global.System.Data.DataColumn
        
        Private columnsize As Global.System.Data.DataColumn
        
        Private columnpurity As Global.System.Data.DataColumn
        
        Private columnnote As Global.System.Data.DataColumn
        
        Private columnivalue As Global.System.Data.DataColumn
        
        Private columnpcs As Global.System.Data.DataColumn
        
        Private columnb_pcs As Global.System.Data.DataColumn
        
        Private columnb_ct As Global.System.Data.DataColumn
        
        Private columnb_class As Global.System.Data.DataColumn
        
        Private columnrate As Global.System.Data.DataColumn
        
        Private columnrtype As Global.System.Data.DataColumn
        
        Private columnmcpg As Global.System.Data.DataColumn
        
        Private columncustomer As Global.System.Data.DataColumn
        
        Private columnd_date As Global.System.Data.DataColumn
        
        Private columnstaff As Global.System.Data.DataColumn
        
        Private columnwastage As Global.System.Data.DataColumn
        
        Private columnadv_detail As Global.System.Data.DataColumn
        
        Private columnimage As Global.System.Data.DataColumn
        
        Private columnfilepath As Global.System.Data.DataColumn
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columndesign As Global.System.Data.DataColumn
        
        Private columndescp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "rptsession"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property keyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property slnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnslno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property metalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmetal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property beednameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbeedname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property grossColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngross
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property beedsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbeeds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property purityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpurity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ivalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnivalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pcsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpcs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property b_pcsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_pcs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property b_ctColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_ct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property b_classColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_class
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rtypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrtype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mcpgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmcpg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property d_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnd_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property staffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstaff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wastageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwastage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adv_detailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadv_detail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property filepathColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfilepath
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property designColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As rptsessionRow
            Get
                Return CType(Me.Rows(index),rptsessionRow)
            End Get
        End Property
        
        Public Event rptsessionRowChanging As rptsessionRowChangeEventHandler
        
        Public Event rptsessionRowChanged As rptsessionRowChangeEventHandler
        
        Public Event rptsessionRowDeleting As rptsessionRowChangeEventHandler
        
        Public Event rptsessionRowDeleted As rptsessionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddrptsessionRow(ByVal row As rptsessionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddrptsessionRow( _
                    ByVal key As String,  _
                    ByVal id As Single,  _
                    ByVal slno As Single,  _
                    ByVal metal As String,  _
                    ByVal item As String,  _
                    ByVal beedname As String,  _
                    ByVal gross As Double,  _
                    ByVal beeds As Double,  _
                    ByVal mc As Double,  _
                    ByVal size As String,  _
                    ByVal purity As String,  _
                    ByVal note As String,  _
                    ByVal ivalue As Double,  _
                    ByVal pcs As Double,  _
                    ByVal b_pcs As Single,  _
                    ByVal b_ct As Double,  _
                    ByVal b_class As Double,  _
                    ByVal rate As Double,  _
                    ByVal rtype As String,  _
                    ByVal mcpg As String,  _
                    ByVal customer As String,  _
                    ByVal d_date As Date,  _
                    ByVal staff As String,  _
                    ByVal wastage As Decimal,  _
                    ByVal adv_detail As String,  _
                    ByVal image() As Byte,  _
                    ByVal filepath As String,  _
                    ByVal code As String,  _
                    ByVal design As String,  _
                    ByVal descp As String) As rptsessionRow
            Dim rowrptsessionRow As rptsessionRow = CType(Me.NewRow,rptsessionRow)
            Dim columnValuesArray() As Object = New Object() {key, id, slno, metal, item, beedname, gross, beeds, mc, size, purity, note, ivalue, pcs, b_pcs, b_ct, b_class, rate, rtype, mcpg, customer, d_date, staff, wastage, adv_detail, image, filepath, code, design, descp}
            rowrptsessionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowrptsessionRow)
            Return rowrptsessionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As rptsessionDataTable = CType(MyBase.Clone,rptsessionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New rptsessionDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnkey = MyBase.Columns("key")
            Me.columnid = MyBase.Columns("id")
            Me.columnslno = MyBase.Columns("slno")
            Me.columnmetal = MyBase.Columns("metal")
            Me.columnitem = MyBase.Columns("item")
            Me.columnbeedname = MyBase.Columns("beedname")
            Me.columngross = MyBase.Columns("gross")
            Me.columnbeeds = MyBase.Columns("beeds")
            Me.columnmc = MyBase.Columns("mc")
            Me.columnsize = MyBase.Columns("size")
            Me.columnpurity = MyBase.Columns("purity")
            Me.columnnote = MyBase.Columns("note")
            Me.columnivalue = MyBase.Columns("ivalue")
            Me.columnpcs = MyBase.Columns("pcs")
            Me.columnb_pcs = MyBase.Columns("b_pcs")
            Me.columnb_ct = MyBase.Columns("b_ct")
            Me.columnb_class = MyBase.Columns("b_class")
            Me.columnrate = MyBase.Columns("rate")
            Me.columnrtype = MyBase.Columns("rtype")
            Me.columnmcpg = MyBase.Columns("mcpg")
            Me.columncustomer = MyBase.Columns("customer")
            Me.columnd_date = MyBase.Columns("d_date")
            Me.columnstaff = MyBase.Columns("staff")
            Me.columnwastage = MyBase.Columns("wastage")
            Me.columnadv_detail = MyBase.Columns("adv_detail")
            Me.columnimage = MyBase.Columns("image")
            Me.columnfilepath = MyBase.Columns("filepath")
            Me.columncode = MyBase.Columns("code")
            Me.columndesign = MyBase.Columns("design")
            Me.columndescp = MyBase.Columns("descp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnkey = New Global.System.Data.DataColumn("key", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkey)
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnslno = New Global.System.Data.DataColumn("slno", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnslno)
            Me.columnmetal = New Global.System.Data.DataColumn("metal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmetal)
            Me.columnitem = New Global.System.Data.DataColumn("item", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitem)
            Me.columnbeedname = New Global.System.Data.DataColumn("beedname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbeedname)
            Me.columngross = New Global.System.Data.DataColumn("gross", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngross)
            Me.columnbeeds = New Global.System.Data.DataColumn("beeds", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbeeds)
            Me.columnmc = New Global.System.Data.DataColumn("mc", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmc)
            Me.columnsize = New Global.System.Data.DataColumn("size", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsize)
            Me.columnpurity = New Global.System.Data.DataColumn("purity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpurity)
            Me.columnnote = New Global.System.Data.DataColumn("note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnote)
            Me.columnivalue = New Global.System.Data.DataColumn("ivalue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnivalue)
            Me.columnpcs = New Global.System.Data.DataColumn("pcs", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpcs)
            Me.columnb_pcs = New Global.System.Data.DataColumn("b_pcs", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_pcs)
            Me.columnb_ct = New Global.System.Data.DataColumn("b_ct", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_ct)
            Me.columnb_class = New Global.System.Data.DataColumn("b_class", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_class)
            Me.columnrate = New Global.System.Data.DataColumn("rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrate)
            Me.columnrtype = New Global.System.Data.DataColumn("rtype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrtype)
            Me.columnmcpg = New Global.System.Data.DataColumn("mcpg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmcpg)
            Me.columncustomer = New Global.System.Data.DataColumn("customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer)
            Me.columnd_date = New Global.System.Data.DataColumn("d_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnd_date)
            Me.columnstaff = New Global.System.Data.DataColumn("staff", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstaff)
            Me.columnwastage = New Global.System.Data.DataColumn("wastage", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwastage)
            Me.columnadv_detail = New Global.System.Data.DataColumn("adv_detail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadv_detail)
            Me.columnimage = New Global.System.Data.DataColumn("image", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage)
            Me.columnfilepath = New Global.System.Data.DataColumn("filepath", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfilepath)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columndesign = New Global.System.Data.DataColumn("design", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesign)
            Me.columndescp = New Global.System.Data.DataColumn("descp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescp)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewrptsessionRow() As rptsessionRow
            Return CType(Me.NewRow,rptsessionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New rptsessionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(rptsessionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.rptsessionRowChangedEvent) Is Nothing) Then
                RaiseEvent rptsessionRowChanged(Me, New rptsessionRowChangeEvent(CType(e.Row,rptsessionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.rptsessionRowChangingEvent) Is Nothing) Then
                RaiseEvent rptsessionRowChanging(Me, New rptsessionRowChangeEvent(CType(e.Row,rptsessionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.rptsessionRowDeletedEvent) Is Nothing) Then
                RaiseEvent rptsessionRowDeleted(Me, New rptsessionRowChangeEvent(CType(e.Row,rptsessionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.rptsessionRowDeletingEvent) Is Nothing) Then
                RaiseEvent rptsessionRowDeleting(Me, New rptsessionRowChangeEvent(CType(e.Row,rptsessionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoverptsessionRow(ByVal row As rptsessionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsroder = New dsroder
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "rptsessionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class rptheaderDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columncustomer As Global.System.Data.DataColumn
        
        Private columno_key As Global.System.Data.DataColumn
        
        Private columnk_date As Global.System.Data.DataColumn
        
        Private columnstaff As Global.System.Data.DataColumn
        
        Private columnr_footer As Global.System.Data.DataColumn
        
        Private columnbus_hrs As Global.System.Data.DataColumn
        
        Private columncom_addr As Global.System.Data.DataColumn
        
        Private columnadv_detail As Global.System.Data.DataColumn
        
        Private columncash_adv As Global.System.Data.DataColumn
        
        Private columnrate As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnpaymode As Global.System.Data.DataColumn
        
        Private columnret_detail As Global.System.Data.DataColumn
        
        Private columnadjustment As Global.System.Data.DataColumn
        
        Private columnbill_recv As Global.System.Data.DataColumn
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columnr_type As Global.System.Data.DataColumn
        
        Private columnorder_advance As Global.System.Data.DataColumn
        
        Private columnadj_title As Global.System.Data.DataColumn
        
        Private columnc_balance As Global.System.Data.DataColumn
        
        Private columnk_time As Global.System.Data.DataColumn
        
        Private columnnote As Global.System.Data.DataColumn
        
        Private columndiscount As Global.System.Data.DataColumn
        
        Private columnlessadvance As Global.System.Data.DataColumn
        
        Private columnreport_note As Global.System.Data.DataColumn
        
        Private columncompanyname As Global.System.Data.DataColumn
        
        Private columnordernote As Global.System.Data.DataColumn
        
        Private columntaxamount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "rptheader"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property o_keyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columno_key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property k_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnk_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property staffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstaff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property r_footerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnr_footer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bus_hrsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbus_hrs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property com_addrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncom_addr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adv_detailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadv_detail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cash_advColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncash_adv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property paymodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaymode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ret_detailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnret_detail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adjustmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjustment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bill_recvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbill_recv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property r_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnr_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property order_advanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorder_advance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adj_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadj_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property c_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnc_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property k_timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnk_time
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lessadvanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlessadvance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property report_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreport_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property companynameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompanyname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ordernoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnordernote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property taxamountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntaxamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As rptheaderRow
            Get
                Return CType(Me.Rows(index),rptheaderRow)
            End Get
        End Property
        
        Public Event rptheaderRowChanging As rptheaderRowChangeEventHandler
        
        Public Event rptheaderRowChanged As rptheaderRowChangeEventHandler
        
        Public Event rptheaderRowDeleting As rptheaderRowChangeEventHandler
        
        Public Event rptheaderRowDeleted As rptheaderRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddrptheaderRow(ByVal row As rptheaderRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddrptheaderRow( _
                    ByVal id As Single,  _
                    ByVal customer As String,  _
                    ByVal o_key As String,  _
                    ByVal k_date As Date,  _
                    ByVal staff As String,  _
                    ByVal r_footer As String,  _
                    ByVal bus_hrs As String,  _
                    ByVal com_addr As String,  _
                    ByVal adv_detail As String,  _
                    ByVal cash_adv As Double,  _
                    ByVal rate As Double,  _
                    ByVal name As String,  _
                    ByVal paymode As String,  _
                    ByVal ret_detail As String,  _
                    ByVal adjustment As Double,  _
                    ByVal bill_recv As Double,  _
                    ByVal total As Double,  _
                    ByVal r_type As String,  _
                    ByVal order_advance As String,  _
                    ByVal adj_title As String,  _
                    ByVal c_balance As Double,  _
                    ByVal k_time As String,  _
                    ByVal note As String,  _
                    ByVal discount As Double,  _
                    ByVal lessadvance As Double,  _
                    ByVal report_note As String,  _
                    ByVal companyname As String,  _
                    ByVal ordernote As String,  _
                    ByVal taxamount As Double) As rptheaderRow
            Dim rowrptheaderRow As rptheaderRow = CType(Me.NewRow,rptheaderRow)
            Dim columnValuesArray() As Object = New Object() {id, customer, o_key, k_date, staff, r_footer, bus_hrs, com_addr, adv_detail, cash_adv, rate, name, paymode, ret_detail, adjustment, bill_recv, total, r_type, order_advance, adj_title, c_balance, k_time, note, discount, lessadvance, report_note, companyname, ordernote, taxamount}
            rowrptheaderRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowrptheaderRow)
            Return rowrptheaderRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As rptheaderDataTable = CType(MyBase.Clone,rptheaderDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New rptheaderDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columncustomer = MyBase.Columns("customer")
            Me.columno_key = MyBase.Columns("o_key")
            Me.columnk_date = MyBase.Columns("k_date")
            Me.columnstaff = MyBase.Columns("staff")
            Me.columnr_footer = MyBase.Columns("r_footer")
            Me.columnbus_hrs = MyBase.Columns("bus_hrs")
            Me.columncom_addr = MyBase.Columns("com_addr")
            Me.columnadv_detail = MyBase.Columns("adv_detail")
            Me.columncash_adv = MyBase.Columns("cash_adv")
            Me.columnrate = MyBase.Columns("rate")
            Me.columnname = MyBase.Columns("name")
            Me.columnpaymode = MyBase.Columns("paymode")
            Me.columnret_detail = MyBase.Columns("ret_detail")
            Me.columnadjustment = MyBase.Columns("adjustment")
            Me.columnbill_recv = MyBase.Columns("bill_recv")
            Me.columntotal = MyBase.Columns("total")
            Me.columnr_type = MyBase.Columns("r_type")
            Me.columnorder_advance = MyBase.Columns("order_advance")
            Me.columnadj_title = MyBase.Columns("adj_title")
            Me.columnc_balance = MyBase.Columns("c_balance")
            Me.columnk_time = MyBase.Columns("k_time")
            Me.columnnote = MyBase.Columns("note")
            Me.columndiscount = MyBase.Columns("discount")
            Me.columnlessadvance = MyBase.Columns("lessadvance")
            Me.columnreport_note = MyBase.Columns("report_note")
            Me.columncompanyname = MyBase.Columns("companyname")
            Me.columnordernote = MyBase.Columns("ordernote")
            Me.columntaxamount = MyBase.Columns("taxamount")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columncustomer = New Global.System.Data.DataColumn("customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer)
            Me.columno_key = New Global.System.Data.DataColumn("o_key", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columno_key)
            Me.columnk_date = New Global.System.Data.DataColumn("k_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnk_date)
            Me.columnstaff = New Global.System.Data.DataColumn("staff", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstaff)
            Me.columnr_footer = New Global.System.Data.DataColumn("r_footer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnr_footer)
            Me.columnbus_hrs = New Global.System.Data.DataColumn("bus_hrs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbus_hrs)
            Me.columncom_addr = New Global.System.Data.DataColumn("com_addr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncom_addr)
            Me.columnadv_detail = New Global.System.Data.DataColumn("adv_detail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadv_detail)
            Me.columncash_adv = New Global.System.Data.DataColumn("cash_adv", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncash_adv)
            Me.columnrate = New Global.System.Data.DataColumn("rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrate)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnpaymode = New Global.System.Data.DataColumn("paymode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaymode)
            Me.columnret_detail = New Global.System.Data.DataColumn("ret_detail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnret_detail)
            Me.columnadjustment = New Global.System.Data.DataColumn("adjustment", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjustment)
            Me.columnbill_recv = New Global.System.Data.DataColumn("bill_recv", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbill_recv)
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columnr_type = New Global.System.Data.DataColumn("r_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnr_type)
            Me.columnorder_advance = New Global.System.Data.DataColumn("order_advance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorder_advance)
            Me.columnadj_title = New Global.System.Data.DataColumn("adj_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadj_title)
            Me.columnc_balance = New Global.System.Data.DataColumn("c_balance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnc_balance)
            Me.columnk_time = New Global.System.Data.DataColumn("k_time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnk_time)
            Me.columnnote = New Global.System.Data.DataColumn("note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnote)
            Me.columndiscount = New Global.System.Data.DataColumn("discount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount)
            Me.columnlessadvance = New Global.System.Data.DataColumn("lessadvance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlessadvance)
            Me.columnreport_note = New Global.System.Data.DataColumn("report_note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreport_note)
            Me.columncompanyname = New Global.System.Data.DataColumn("companyname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompanyname)
            Me.columnordernote = New Global.System.Data.DataColumn("ordernote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnordernote)
            Me.columntaxamount = New Global.System.Data.DataColumn("taxamount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntaxamount)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewrptheaderRow() As rptheaderRow
            Return CType(Me.NewRow,rptheaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New rptheaderRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(rptheaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.rptheaderRowChangedEvent) Is Nothing) Then
                RaiseEvent rptheaderRowChanged(Me, New rptheaderRowChangeEvent(CType(e.Row,rptheaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.rptheaderRowChangingEvent) Is Nothing) Then
                RaiseEvent rptheaderRowChanging(Me, New rptheaderRowChangeEvent(CType(e.Row,rptheaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.rptheaderRowDeletedEvent) Is Nothing) Then
                RaiseEvent rptheaderRowDeleted(Me, New rptheaderRowChangeEvent(CType(e.Row,rptheaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.rptheaderRowDeletingEvent) Is Nothing) Then
                RaiseEvent rptheaderRowDeleting(Me, New rptheaderRowChangeEvent(CType(e.Row,rptheaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoverptheaderRow(ByVal row As rptheaderRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsroder = New dsroder
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "rptheaderDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class sale_wtDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnbillno As Global.System.Data.DataColumn
        
        Private columnrate As Global.System.Data.DataColumn
        
        Private columnweight As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnsr_wt As Global.System.Data.DataColumn
        
        Private columnsch_wt As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "sale_wt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property billnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sr_wtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsr_wt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sch_wtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsch_wt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As sale_wtRow
            Get
                Return CType(Me.Rows(index),sale_wtRow)
            End Get
        End Property
        
        Public Event sale_wtRowChanging As sale_wtRowChangeEventHandler
        
        Public Event sale_wtRowChanged As sale_wtRowChangeEventHandler
        
        Public Event sale_wtRowDeleting As sale_wtRowChangeEventHandler
        
        Public Event sale_wtRowDeleted As sale_wtRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addsale_wtRow(ByVal row As sale_wtRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addsale_wtRow(ByVal billno As String, ByVal rate As Double, ByVal weight As Double, ByVal amount As Double, ByVal sr_wt As Double, ByVal sch_wt As Double) As sale_wtRow
            Dim rowsale_wtRow As sale_wtRow = CType(Me.NewRow,sale_wtRow)
            Dim columnValuesArray() As Object = New Object() {billno, rate, weight, amount, sr_wt, sch_wt}
            rowsale_wtRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowsale_wtRow)
            Return rowsale_wtRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As sale_wtDataTable = CType(MyBase.Clone,sale_wtDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New sale_wtDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnbillno = MyBase.Columns("billno")
            Me.columnrate = MyBase.Columns("rate")
            Me.columnweight = MyBase.Columns("weight")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnsr_wt = MyBase.Columns("sr_wt")
            Me.columnsch_wt = MyBase.Columns("sch_wt")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnbillno = New Global.System.Data.DataColumn("billno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
            Me.columnrate = New Global.System.Data.DataColumn("rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrate)
            Me.columnweight = New Global.System.Data.DataColumn("weight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweight)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnsr_wt = New Global.System.Data.DataColumn("sr_wt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsr_wt)
            Me.columnsch_wt = New Global.System.Data.DataColumn("sch_wt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsch_wt)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newsale_wtRow() As sale_wtRow
            Return CType(Me.NewRow,sale_wtRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New sale_wtRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(sale_wtRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.sale_wtRowChangedEvent) Is Nothing) Then
                RaiseEvent sale_wtRowChanged(Me, New sale_wtRowChangeEvent(CType(e.Row,sale_wtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.sale_wtRowChangingEvent) Is Nothing) Then
                RaiseEvent sale_wtRowChanging(Me, New sale_wtRowChangeEvent(CType(e.Row,sale_wtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.sale_wtRowDeletedEvent) Is Nothing) Then
                RaiseEvent sale_wtRowDeleted(Me, New sale_wtRowChangeEvent(CType(e.Row,sale_wtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.sale_wtRowDeletingEvent) Is Nothing) Then
                RaiseEvent sale_wtRowDeleting(Me, New sale_wtRowChangeEvent(CType(e.Row,sale_wtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removesale_wtRow(ByVal row As sale_wtRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsroder = New dsroder
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "sale_wtDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class rptsessionRow
        Inherits Global.System.Data.DataRow
        
        Private tablerptsession As rptsessionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablerptsession = CType(Me.Table,rptsessionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property key() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.keyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'key' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.keyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Single
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.idColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property slno() As Single
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.slnoColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'slno' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.slnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property metal() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.metalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'metal' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.metalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property item() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.itemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'item' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property beedname() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.beednameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'beedname' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.beednameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property gross() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.grossColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gross' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.grossColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property beeds() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.beedsColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'beeds' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.beedsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mc() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.mcColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mc' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.mcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property size() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.sizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'size' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.sizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property purity() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.purityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'purity' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.purityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property note() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'note' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ivalue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.ivalueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ivalue' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.ivalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pcs() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.pcsColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pcs' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.pcsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property b_pcs() As Single
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.b_pcsColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_pcs' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.b_pcsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property b_ct() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.b_ctColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_ct' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.b_ctColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property b_class() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.b_classColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_class' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.b_classColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.rateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rate' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rtype() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.rtypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rtype' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.rtypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mcpg() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.mcpgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mcpg' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.mcpgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customer() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.customerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.customerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property d_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.d_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'd_date' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.d_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property staff() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.staffColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'staff' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.staffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wastage() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.wastageColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wastage' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.wastageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adv_detail() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.adv_detailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adv_detail' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.adv_detailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property image() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.imageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property filepath() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.filepathColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'filepath' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.filepathColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property design() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.designColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'design' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.designColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descp() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptsession.descpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'descp' in table 'rptsession' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptsession.descpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IskeyNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.keyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetkeyNull()
            Me(Me.tablerptsession.keyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tablerptsession.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsslnoNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.slnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetslnoNull()
            Me(Me.tablerptsession.slnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmetalNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.metalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmetalNull()
            Me(Me.tablerptsession.metalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsitemNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.itemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetitemNull()
            Me(Me.tablerptsession.itemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbeednameNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.beednameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbeednameNull()
            Me(Me.tablerptsession.beednameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgrossNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.grossColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgrossNull()
            Me(Me.tablerptsession.grossColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbeedsNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.beedsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbeedsNull()
            Me(Me.tablerptsession.beedsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmcNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.mcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmcNull()
            Me(Me.tablerptsession.mcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssizeNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.sizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsizeNull()
            Me(Me.tablerptsession.sizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspurityNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.purityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpurityNull()
            Me(Me.tablerptsession.purityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnoteNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnoteNull()
            Me(Me.tablerptsession.noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsivalueNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.ivalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetivalueNull()
            Me(Me.tablerptsession.ivalueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspcsNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.pcsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpcsNull()
            Me(Me.tablerptsession.pcsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isb_pcsNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.b_pcsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setb_pcsNull()
            Me(Me.tablerptsession.b_pcsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isb_ctNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.b_ctColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setb_ctNull()
            Me(Me.tablerptsession.b_ctColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isb_classNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.b_classColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setb_classNull()
            Me(Me.tablerptsession.b_classColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrateNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrateNull()
            Me(Me.tablerptsession.rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrtypeNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.rtypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrtypeNull()
            Me(Me.tablerptsession.rtypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmcpgNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.mcpgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmcpgNull()
            Me(Me.tablerptsession.mcpgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscustomerNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.customerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcustomerNull()
            Me(Me.tablerptsession.customerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isd_dateNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.d_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setd_dateNull()
            Me(Me.tablerptsession.d_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstaffNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.staffColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstaffNull()
            Me(Me.tablerptsession.staffColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IswastageNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.wastageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetwastageNull()
            Me(Me.tablerptsession.wastageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadv_detailNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.adv_detailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadv_detailNull()
            Me(Me.tablerptsession.adv_detailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsimageNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetimageNull()
            Me(Me.tablerptsession.imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfilepathNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.filepathColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfilepathNull()
            Me(Me.tablerptsession.filepathColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodeNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodeNull()
            Me(Me.tablerptsession.codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdesignNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.designColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdesignNull()
            Me(Me.tablerptsession.designColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdescpNull() As Boolean
            Return Me.IsNull(Me.tablerptsession.descpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdescpNull()
            Me(Me.tablerptsession.descpColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class rptheaderRow
        Inherits Global.System.Data.DataRow
        
        Private tablerptheader As rptheaderDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablerptheader = CType(Me.Table,rptheaderDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Single
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.idColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customer() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.customerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.customerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property o_key() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.o_keyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'o_key' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.o_keyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property k_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.k_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'k_date' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.k_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property staff() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.staffColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'staff' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.staffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property r_footer() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.r_footerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'r_footer' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.r_footerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bus_hrs() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.bus_hrsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bus_hrs' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.bus_hrsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property com_addr() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.com_addrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'com_addr' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.com_addrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adv_detail() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.adv_detailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adv_detail' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.adv_detailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cash_adv() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.cash_advColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cash_adv' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.cash_advColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.rateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rate' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property paymode() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.paymodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paymode' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.paymodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ret_detail() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.ret_detailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ret_detail' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.ret_detailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adjustment() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.adjustmentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjustment' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.adjustmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bill_recv() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.bill_recvColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bill_recv' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.bill_recvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.totalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'total' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property r_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.r_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'r_type' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.r_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property order_advance() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.order_advanceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'order_advance' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.order_advanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adj_title() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.adj_titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adj_title' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.adj_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property c_balance() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.c_balanceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'c_balance' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.c_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property k_time() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.k_timeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'k_time' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.k_timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property note() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'note' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.discountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.discountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lessadvance() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.lessadvanceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lessadvance' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.lessadvanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property report_note() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.report_noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'report_note' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.report_noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property companyname() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.companynameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'companyname' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.companynameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ordernote() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.ordernoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ordernote' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.ordernoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property taxamount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptheader.taxamountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'taxamount' in table 'rptheader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptheader.taxamountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tablerptheader.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscustomerNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.customerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcustomerNull()
            Me(Me.tablerptheader.customerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iso_keyNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.o_keyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Seto_keyNull()
            Me(Me.tablerptheader.o_keyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isk_dateNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.k_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setk_dateNull()
            Me(Me.tablerptheader.k_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstaffNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.staffColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstaffNull()
            Me(Me.tablerptheader.staffColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isr_footerNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.r_footerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setr_footerNull()
            Me(Me.tablerptheader.r_footerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbus_hrsNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.bus_hrsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbus_hrsNull()
            Me(Me.tablerptheader.bus_hrsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscom_addrNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.com_addrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcom_addrNull()
            Me(Me.tablerptheader.com_addrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadv_detailNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.adv_detailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadv_detailNull()
            Me(Me.tablerptheader.adv_detailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscash_advNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.cash_advColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcash_advNull()
            Me(Me.tablerptheader.cash_advColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrateNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrateNull()
            Me(Me.tablerptheader.rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnameNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnameNull()
            Me(Me.tablerptheader.nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspaymodeNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.paymodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpaymodeNull()
            Me(Me.tablerptheader.paymodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isret_detailNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.ret_detailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setret_detailNull()
            Me(Me.tablerptheader.ret_detailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsadjustmentNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.adjustmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetadjustmentNull()
            Me(Me.tablerptheader.adjustmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbill_recvNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.bill_recvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbill_recvNull()
            Me(Me.tablerptheader.bill_recvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstotalNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettotalNull()
            Me(Me.tablerptheader.totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isr_typeNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.r_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setr_typeNull()
            Me(Me.tablerptheader.r_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorder_advanceNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.order_advanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorder_advanceNull()
            Me(Me.tablerptheader.order_advanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadj_titleNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.adj_titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadj_titleNull()
            Me(Me.tablerptheader.adj_titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isc_balanceNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.c_balanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setc_balanceNull()
            Me(Me.tablerptheader.c_balanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isk_timeNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.k_timeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setk_timeNull()
            Me(Me.tablerptheader.k_timeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnoteNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnoteNull()
            Me(Me.tablerptheader.noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdiscountNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.discountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdiscountNull()
            Me(Me.tablerptheader.discountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslessadvanceNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.lessadvanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlessadvanceNull()
            Me(Me.tablerptheader.lessadvanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isreport_noteNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.report_noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setreport_noteNull()
            Me(Me.tablerptheader.report_noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompanynameNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.companynameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompanynameNull()
            Me(Me.tablerptheader.companynameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsordernoteNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.ordernoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetordernoteNull()
            Me(Me.tablerptheader.ordernoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstaxamountNull() As Boolean
            Return Me.IsNull(Me.tablerptheader.taxamountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettaxamountNull()
            Me(Me.tablerptheader.taxamountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class sale_wtRow
        Inherits Global.System.Data.DataRow
        
        Private tablesale_wt As sale_wtDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesale_wt = CType(Me.Table,sale_wtDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property billno() As String
            Get
                Try 
                    Return CType(Me(Me.tablesale_wt.billnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billno' in table 'sale_wt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesale_wt.billnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablesale_wt.rateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rate' in table 'sale_wt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesale_wt.rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property weight() As Double
            Get
                Try 
                    Return CType(Me(Me.tablesale_wt.weightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'weight' in table 'sale_wt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesale_wt.weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablesale_wt.amountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount' in table 'sale_wt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesale_wt.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sr_wt() As Double
            Get
                Try 
                    Return CType(Me(Me.tablesale_wt.sr_wtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sr_wt' in table 'sale_wt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesale_wt.sr_wtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sch_wt() As Double
            Get
                Try 
                    Return CType(Me(Me.tablesale_wt.sch_wtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sch_wt' in table 'sale_wt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesale_wt.sch_wtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbillnoNull() As Boolean
            Return Me.IsNull(Me.tablesale_wt.billnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbillnoNull()
            Me(Me.tablesale_wt.billnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrateNull() As Boolean
            Return Me.IsNull(Me.tablesale_wt.rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrateNull()
            Me(Me.tablesale_wt.rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsweightNull() As Boolean
            Return Me.IsNull(Me.tablesale_wt.weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetweightNull()
            Me(Me.tablesale_wt.weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsamountNull() As Boolean
            Return Me.IsNull(Me.tablesale_wt.amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetamountNull()
            Me(Me.tablesale_wt.amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issr_wtNull() As Boolean
            Return Me.IsNull(Me.tablesale_wt.sr_wtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsr_wtNull()
            Me(Me.tablesale_wt.sr_wtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issch_wtNull() As Boolean
            Return Me.IsNull(Me.tablesale_wt.sch_wtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsch_wtNull()
            Me(Me.tablesale_wt.sch_wtColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class rptsessionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As rptsessionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As rptsessionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As rptsessionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class rptheaderRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As rptheaderRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As rptheaderRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As rptheaderRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class sale_wtRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As sale_wtRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As sale_wtRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As sale_wtRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
